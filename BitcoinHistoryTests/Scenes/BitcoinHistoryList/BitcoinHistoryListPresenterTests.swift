//
//  BitcoinHistoryListPresenterTests.swift
//  bitcoin-history
//
//  Created by Josep Bordes Jové on 30/11/2019.
//  Copyright (c) 2019 Josep Bordes Jové. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Bitcoin_History
import XCTest
import BHKit

class BitcoinHistoryListPresenterTests: XCTestCase {
  // MARK: Subject under test
  
  var sut: BitcoinHistoryListPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp() {
    super.setUp()
    setupBitcoinHistoryListPresenter()
  }
  
  override func tearDown() {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupBitcoinHistoryListPresenter() {
    sut = BitcoinHistoryListPresenter()
  }
  
  // MARK: Test doubles
  
  class BitcoinHistoryListDisplayLogicSpy: BitcoinHistoryListDisplayLogic {
    var displayViewCalled = false
    var displayStartUpdatingTodayRateCalled = false
    var displayStopUpdatingTodayRateCalled = false
    var displayForceUpdateTodaysRateCalled = false
    
    func displayView(viewModel: BitcoinHistoryList.PrepareView.ViewModel) {
      displayViewCalled = true
    }
    
    func displayStartUpdatingTodayRate(viewModel: BitcoinHistoryList.StartUpdatingForPrice.ViewModel) {
      displayStartUpdatingTodayRateCalled = true
    }
    
    func displayStopUpdatingTodayRate(viewModel: BitcoinHistoryList.StopUpdatingForPrice.ViewModel) {
      displayStopUpdatingTodayRateCalled = true
    }
    
    func displayForceUpdateTodaysRate(viewModel: BitcoinHistoryList.ForceUpdateTodaysRate.ViewModel) {
      displayForceUpdateTodaysRateCalled = true
    }
  }
  
  // MARK: Tests
  
  func testPresentView() {
    // Given
    let spy = BitcoinHistoryListDisplayLogicSpy()
    sut.viewController = spy
    let response = BitcoinHistoryList.PrepareView.Response(result: .success([]))
    
    // When
    sut.presentView(response: response)
    
    // Then
    XCTAssertTrue(spy.displayViewCalled, "presentView(response:) should ask the view controller to display the result")
  }
  
  func testDisplayStartUpdatingTodayRate(){
    // Given
    let spy = BitcoinHistoryListDisplayLogicSpy()
    sut.viewController = spy
    let sections: [BitconHistorySection] = [.historic(list: RateList.fake), .today(detail: RateList.fake)]
    let response = BitcoinHistoryList.StartUpdatingForPrice.Response(result: .success(sections))

    // When
    sut.presentStartUpdatingTodayRate(response: response)

    // Then
    XCTAssertTrue(spy.displayStartUpdatingTodayRateCalled, "presentStartUpdatingTodayRate(response:) should ask the view controller to display the result")
  }

  func testDisplayForceUpdateTodaysRate() {
    // Given
    let sections: [BitconHistorySection] = [.historic(list: RateList.fake), .today(detail: RateList.fake)]
    let response = BitcoinHistoryList.ForceUpdateTodaysRate.Response(result: .success(sections))
    let spy = BitcoinHistoryListDisplayLogicSpy()
    sut.viewController = spy
    
    // When
    sut.presentForceUpdateTodaysRate(response: response)
    
    // Then
    XCTAssertTrue(spy.displayForceUpdateTodaysRateCalled, "presentForceUpdateTodaysRate(response:) should ask the view controller to display the result")
  }
}
