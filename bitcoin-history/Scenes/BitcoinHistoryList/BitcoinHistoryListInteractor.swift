//
//  BitcoinHistoryListInteractor.swift
//  bitcoin-history
//
//  Created by Josep Bordes Jové on 27/11/2019.
//  Copyright (c) 2019 Josep Bordes Jové. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import BHKit

protocol BitcoinHistoryListBusinessLogic {
  func prepareView(request: BitcoinHistoryList.PrepareView.Request)
}

protocol BitcoinHistoryListDataStore {
  var historicalList: HistoricalList? { get set }
}

class BitcoinHistoryListInteractor: BitcoinHistoryListBusinessLogic, BitcoinHistoryListDataStore {
  var presenter: BitcoinHistoryListPresentationLogic?
  
  // MARK: Data store
  
  var historicalList: HistoricalList?
  
  // MARK: Workers
  
  var bitcoinHistoryWorker = BitcoinHistoryWorker(store: BitcoinHistoryStore())
  
  // MARK: Business logic
  
  func prepareView(request: BitcoinHistoryList.PrepareView.Request) {
    
    bitcoinHistoryWorker.getHistorical(start: nil, end: nil) { (result) in
      switch result {
      case .success(let list):
        self.historicalList = list
        let response = BitcoinHistoryList.PrepareView.Response(result: result)
        self.presenter?.presentView(response: response)
      case .failure:
        let response = BitcoinHistoryList.PrepareView.Response(result: result)
        self.presenter?.presentView(response: response)
      }
    }
  }
}
