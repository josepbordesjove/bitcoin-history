//
//  BitcoinHistoryListRouter.swift
//  bitcoin-history
//
//  Created by Josep Bordes Jové on 27/11/2019.
//  Copyright (c) 2019 Josep Bordes Jové. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import BHUIKit
import BHKit

@objc protocol BitcoinHistoryListRoutingLogic {
  func routeToInfoDisclaimer()
  func routeToBitcoinRateDetail()
  func updateDataToBitcoinRateDetailIfPresented()
}

protocol BitcoinHistoryListDataPassing {
  var dataStore: BitcoinHistoryListDataStore? { get }
}

class BitcoinHistoryListRouter: NSObject, BitcoinHistoryListRoutingLogic, BitcoinHistoryListDataPassing {
  weak var viewController: BitcoinHistoryListViewController?
  var dataStore: BitcoinHistoryListDataStore?
  
  // MARK: Routing
  
  func routeToInfoDisclaimer() {
    var message = NSLocalizedString("Something basic to inform about the price, disclaiming about the showed info", comment: "")
    
    if let todayDisclaimer = dataStore?.todayRate?.disclaimer {
      message = todayDisclaimer
    }
    
    let alertController = UIAlertController(title: NSLocalizedString("Disclaimer", comment: ""), message: message, preferredStyle: .alert)
    let acceptAction = UIAlertAction(title: NSLocalizedString("Accept", comment: ""), style: .default, handler: nil)
    
    alertController.addAction(acceptAction)
    viewController?.present(alertController, animated: true, completion: nil)
  }
  
  func routeToBitcoinRateDetail() {
    let destinationVC = BitcoinPriceDetailViewController(store: Store())
    var destinationDS = destinationVC.router!.dataStore!
    passDataToBitcoinPriceDetail(source: dataStore!, destination: &destinationDS)
    navigateToBitcoinPriceDetail(source: viewController!, destination: destinationVC)
  }
  
  func updateDataToBitcoinRateDetailIfPresented() {
    UIApplication.shared.windows.forEach { (window) in
      guard let rootController = window.rootViewController as? UISplitViewController else {
          return
      }

      rootController.viewControllers.forEach { (viewController) in
        if let navigationViewController = viewController as? UINavigationController {
          navigationViewController.viewControllers.forEach { (viewController) in
            if let detailViewController = viewController as? BitcoinPriceDetailViewController {
              var destinationDS = detailViewController.router!.dataStore!
              passDataToBitcoinPriceDetail(source: dataStore!, destination: &destinationDS)
              detailViewController.prepareView()
            }
          }
        }
      }
    }
  }

  // MARK: Navigation
  
  func navigateToBitcoinPriceDetail(source: BitcoinHistoryListViewController, destination: BitcoinPriceDetailViewController) {
    #if targetEnvironment(macCatalyst)
    let detailViewController = destination
    #else
    let detailViewController = UINavigationController(rootViewController: destination)
    detailViewController.navigationBar.tintColor = Color.brand
    #endif
    
    
    source.showDetailViewController(detailViewController, sender: self)
  }
  
  // MARK: Passing data
  
  func passDataToBitcoinPriceDetail(source: BitcoinHistoryListDataStore, destination: inout BitcoinPriceDetailDataStore) {
    if let selectedIndexPath = viewController?.tableView.indexPathForSelectedRow {
      if selectedIndexPath.section == 0 {
        destination.dayRate = source.todayRate
      } else if let historicRate = source.historicalList?.list[selectedIndexPath.row] {
        destination.historicRate = historicRate
      }
    } else {
      assertionFailure("If this methos has been called it means that a cell has been selected")
    }
  }
}
